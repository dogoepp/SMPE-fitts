---
title: "PointingXP"
author: "CÃ©line Coutrix"
date: "11/17/2021"
output: html_document
---

* Loading libraries

#+begin_src R :results output :session *R* :exports both
library(ggplot2)
library(tidyverse)
#+end_src

#+RESULTS:
: 
: â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.2 â”€â”€
: [32mâœ”[39m [34mtibble [39m 3.1.6     [32mâœ”[39m [34mdplyr  [39m 1.0.8
: [32mâœ”[39m [34mtidyr  [39m 1.2.0     [32mâœ”[39m [34mstringr[39m 1.4.0
: [32mâœ”[39m [34mreadr  [39m 2.1.3     [32mâœ”[39m [34mforcats[39m 0.5.2
: [32mâœ”[39m [34mpurrr  [39m 0.3.4     
: â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
: [31mâœ–[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
: [31mâœ–[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()

* first analysys
** Loading data

 loading csv data into a dataframe
   #+begin_src R :results output :session *R* :exports both
  meanMTdf <- read.csv("data/20211117_1527_MeanMT.csv", header=T)
  rawdf <- read.csv("data/20211117_1527_RawData.csv", header=T)
   #+end_src

   #+RESULTS:

** Plotting the data together with the linear regression
 r Plotting the raw data together with the linear regression

 #+begin_src R :results output graphics file :file ../pictures/raw_data_regression.png :exports both :width 600 :height 400 :session *R*
ggplot(meanMTdf, aes(ID, MT)) +
  geom_point() +
  geom_smooth(method='lm')
 #+end_src

 #+RESULTS:
 [[file:../pictures/raw_data_regression.png]]

** Linear modelling

   #+begin_src R :results output :session *R* :exports both
  model <- lm(MT~ID, data = meanMTdf)
summary(model)
   #+end_src

   #+RESULTS:
   #+begin_example

   Call:
   lm(formula = MT ~ ID, data = meanMTdf)

   Residuals:
      Min     1Q Median     3Q    Max 
   -381.4 -276.3   58.7  144.7  539.6 

   Coefficients:
	       Estimate Std. Error t value Pr(>|t|)  
   (Intercept)   1108.4      351.1   3.158    0.016 *
   ID             111.0      107.5   1.032    0.336  
   ---
   codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

   Residual standard error: 320.5 on 7 degrees of freedom
   Multiple R-squared:  0.1321,	Adjusted R-squared:  0.008146 
   F-statistic: 1.066 on 1 and 7 DF,  p-value: 0.3363
   #+end_example

 Weirdly, in contrast to what Fitts' law says, ID does not seem to have an impact on the movement time. 
 Also, the R2=0.218 reported by the [experimental software](http://ergo.human.cornell.edu/FittsLaw/FittsLaw.html) and the R2=0.008146 I find here, are different. 

* new analysis 

Let us define a function which loads the experiment data directly from the raw HTML of the experiment website. 
This saves us the extra manual step of converting the HTML tables into CSV files.

  #+begin_src R :results output :session *R* :exports both
  load_data_from_html = function(file_path){
   # using the htmltab package to scan html file
   # selecting the 2nd table which contains all the data and the 1st selects the aggregated data
  htmltab::htmltab(doc=file_path , which = 2) %>%
  as_tibble() %>%
   # convert the data_types to numbers
   mutate(A = readr::parse_number(x = A)) %>%
   mutate(W = readr::parse_number(x = W)) %>%
   mutate(MT = readr::parse_number(x = MT)) %>%
   mutate(ID = readr::parse_number(x = ID))
}
  #+end_src

  #+RESULTS:

converting HTML to csv

  #+begin_src R :results output :session *R* :exports both
  store_in_csv = function(df, path){
    write_csv(df, path)
  }
  #+end_src

  #+RESULTS:

** first clement experiment
*** Loading data
    #+begin_src R :results output :session *R* :exports both
 load_data_from_html("raw_data/20201010_1540_clement.html") -> data_clement
    #+end_src

    #+RESULTS:
    : Erreur : Couldn't find the table. Try passing (different) information to the which argument.
    : De plus : Message d'avis :
    : XML content does not seem to be XML: ''

*** Plotting the data together with the linear regression
  r Plotting the raw data together with the linear regression

  #+begin_src R :results output graphics file :file pictures/20201010_1540_clement_data_regression.png :exports both :width 600 :height 400 :session *R*
  data_clement %>% ggplot(aes(ID, MT)) +
  geom_point() +
  geom_smooth(method='lm')
  #+end_src

  #+RESULTS:
  [[file:pictures/20201010_1540_clement_data_regression.png]]

*** Linear modeling
     #+begin_src R :results output :session *R* :exports both
    model <- lm(MT~ID, data = data_clement)
    summary(model)
    #+end_src

    #+RESULTS:
    #+begin_example
    Erreur dans is.data.frame(data) : objet 'data_clement' introuvable

    Call:
    lm(formula = MT ~ ID, data = meanMTdf)

    Residuals:
       Min     1Q Median     3Q    Max 
    -381.4 -276.3   58.7  144.7  539.6 

    Coefficients:
		Estimate Std. Error t value Pr(>|t|)  
    (Intercept)   1108.4      351.1   3.158    0.016 *
    ID             111.0      107.5   1.032    0.336  
    ---
    codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

    Residual standard error: 320.5 on 7 degrees of freedom
    Multiple R-squared:  0.1321,	Adjusted R-squared:  0.008146 
    F-statistic: 1.066 on 1 and 7 DF,  p-value: 0.3363
    #+end_example

** Dorian's first data acquisition

   #+begin_src R :results output :exports both :session *R*
  analyse <- function(base_file_path) {
      meanMTdf <- read.csv(paste(base_file_path, "_MeanMT.csv", sep=""), header=T)
      rawdf <- read.csv(paste(base_file_path, "_RawData.csv", sep=""), header=T)
      return(rawdf)
  }
   #+end_src

   #+RESULTS:

   #+begin_src R :results output :session *R* :exports both
  meanMTdf <- analyse("../data/20221110_1510_Dorian")
   #+end_src

   #+RESULTS:
   : Erreur dans file(file, "rt") : impossible d'ouvrir la connexion
   : De plus : Message d'avis :
   : Dans file(file, "rt") :
   :   impossible d'ouvrir le fichier '../data/20221110_1510_Dorian_MeanMT.csv' : Aucun fichier ou dossier de ce type

   #+begin_src R :results output :session *R* :exports both
  model <- lm(MT~ID, data = meanMTdf)
  summary(model)
   #+end_src

   #+RESULTS:
   #+begin_example

   Call:
   lm(formula = MT ~ ID, data = meanMTdf)

   Residuals:
      Min     1Q Median     3Q    Max 
   -381.4 -276.3   58.7  144.7  539.6 

   Coefficients:
	       Estimate Std. Error t value Pr(>|t|)  
   (Intercept)   1108.4      351.1   3.158    0.016 *
   ID             111.0      107.5   1.032    0.336  
   ---
   codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

   Residual standard error: 320.5 on 7 degrees of freedom
   Multiple R-squared:  0.1321,	Adjusted R-squared:  0.008146 
   F-statistic: 1.066 on 1 and 7 DF,  p-value: 0.3363
   #+end_example

   #+begin_src R :results output graphics file :file ../pictures/Dorian_1.png :exports both :width 600 :height 400 :session *R*
  ggplot(meanMTdf, aes(ID, MT)) +
     geom_point() +
     geom_smooth(method='lm')
   #+end_src

   #+RESULTS:
   [[file:../pictures/Dorian_1.png]]

 Our results do not match with the linear regression results provided
 by the experimentation website. If we use the MeanMTdf, we get similar
 Rsquare and coefficients (grossly) but if we use the raw data (which
 makes more sense), we find lower Rsquare but still similar coefficients.

** Using the graphic tablet 
   #+begin_src R :results output :session *R* :exports both
   graphic_experiment_clement <- load_data_from_html("raw_data/20221110_1631_clement.html")
   #+end_src

   #+RESULTS:
   : Neither <thead> nor <th> information found. Taking first table row for the header. If incorrect, specify header argument.

** Designed experiment on 2022-11-14

We will analyse here the data gathered during the experiments on 2022-11-14, which were designed as explained in `journal.md`.

#+begin_src R :results output :session *R* :exports both
file_names = c(
   "1934_dorian",
   "1938_dorian",
   "1942_dorian",
   "1936_clement",
   "1939_clement",
   "2024_dorian"
)
person = c(
   "Dorian",
   "Dorian",
   "Dorian",
   "Clement",
   "Clement",
   "Dorian"
)
input_device = c(
   "Track Pad",
   "Graphic tablet",
   "Graphic tablet",
   "Track Pad",
   "Track Pad",
   "Track Pad"
)

# experiments = data.frame()

for (i in 1:6) { 
   in_path <- paste("raw_data/20221114_", file_names[i] ,".html", sep="")
   out_path <- paste("data/20221114_", file_names[i] ,"_RawData.csv", sep="")
   print(in_path)
   print(out_path)
   experiment <- load_data_from_html(in_path)
   store_in_csv(experiment,out_path)
}
#    experiment$exp = i
#    experiment$person = person[i]
#    experiments$input_device = input_device[i]
#    experiments <- rbind(experiments, experiment)
# }
# experiments


#+end_src

#+RESULTS:
